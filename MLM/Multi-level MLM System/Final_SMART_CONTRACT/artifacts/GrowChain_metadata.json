{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_gntAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "level",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "IncomeDistributed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "oldOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "referrer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "Registered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldFee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newFee",
						"type": "uint256"
					}
				],
				"name": "RegistrationFeeUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "oldToken",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newToken",
						"type": "address"
					}
				],
				"name": "TokenUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "admin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Withdraw",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "GNT",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "REGISTRATION_FEE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "admin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_fee",
						"type": "uint256"
					}
				],
				"name": "changeRegistrationFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "contractTokenBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "emergencyWithdrawAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "start",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "limit",
						"type": "uint256"
					}
				],
				"name": "getDirectReferralsPaginated",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getIndirectReferrals",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getUserDetails",
				"outputs": [
					{
						"internalType": "address",
						"name": "referrer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "directReferralIncome",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "referralCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "teamIncome",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "teamSize",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isRegistered",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "registrationTime",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "levelPercentage",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxReferralDepth",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_referrer",
						"type": "address"
					}
				],
				"name": "registration",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpaused",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "updateTokenAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "users",
				"outputs": [
					{
						"internalType": "address",
						"name": "referrer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "directReferralIncome",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isRegistered",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "referralCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "registrationTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "teamIncome",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "teamSize",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"changeRegistrationFee(uint256)": {
					"params": {
						"_fee": "New fee in whole numbers (e.g., 10 means 10 tokens)"
					}
				},
				"contractTokenBalance()": {
					"returns": {
						"_0": "GNT balance held by the contract"
					}
				},
				"getDirectReferralsPaginated(address,uint256,uint256)": {
					"params": {
						"_user": "Address of the user",
						"limit": "Number of addresses to return",
						"start": "Starting index"
					},
					"returns": {
						"_0": "Array of referral addresses"
					}
				},
				"getIndirectReferrals(address)": {
					"params": {
						"_user": "Address of the user"
					},
					"returns": {
						"_0": "Array of indirect referral addresses"
					}
				},
				"getUserDetails(address)": {
					"params": {
						"_user": "Address of the user"
					},
					"returns": {
						"directReferralIncome": "Total direct referral income",
						"isRegistered": "If the user is registered",
						"referralCount": "Total direct referrals",
						"referrer": "Referrer address",
						"registrationTime": "Timestamp of registration",
						"teamIncome": "Total income from team",
						"teamSize": "Total size of team (all levels)"
					}
				},
				"registration(address)": {
					"params": {
						"_referrer": "Address of the referrer (must be already registered)"
					}
				},
				"transferOwnership(address)": {
					"params": {
						"_newOwner": "Address of the new owner"
					}
				},
				"updateTokenAddress(address)": {
					"params": {
						"_token": "New token contract address"
					}
				},
				"withdraw(uint256)": {
					"params": {
						"amount": "Amount of tokens to withdraw"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"changeRegistrationFee(uint256)": {
					"notice": "Change the registration fee (only owner)"
				},
				"contractTokenBalance()": {
					"notice": "View the contract's GNT token balance"
				},
				"getDirectReferralsPaginated(address,uint256,uint256)": {
					"notice": "Returns a paginated list of direct referrals"
				},
				"getIndirectReferrals(address)": {
					"notice": "Get list of indirect referrals"
				},
				"getUserDetails(address)": {
					"notice": "Get user details"
				},
				"paused()": {
					"notice": "Pause the contract (only owner)"
				},
				"registration(address)": {
					"notice": "Register a new user under a valid referrer"
				},
				"transferOwnership(address)": {
					"notice": "Transfer contract ownership to a new address"
				},
				"unpaused()": {
					"notice": "Unpause the contract (only owner)"
				},
				"updateTokenAddress(address)": {
					"notice": "Update the GNT token address (only owner)"
				},
				"withdraw(uint256)": {
					"notice": "Withdraw GNT tokens from contract (only owner)"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"MLM/Multi-level MLM System/Final_SMART_CONTRACT/GrowChain.sol": "GrowChain"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"MLM/Multi-level MLM System/Final_SMART_CONTRACT/GrowChain.sol": {
			"keccak256": "0xa0b08d162350aae515aeb8d002ffd99ed4f1ab19db437dc03b5d4fb3c883f5db",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://54eb4012af3f6414866547cd356e3bfad4f2c7c7805dfdf480a59d1c4c7634fa",
				"dweb:/ipfs/QmQMW9HYjNuG987MKFcSHsp4rkNUck9xnr6UdSkwGCUfrB"
			]
		}
	},
	"version": 1
}